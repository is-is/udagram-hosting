version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
  # different jobs are calles later in the workflows sections
jobs:
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/node:16.17"
    steps:
      # install node and checkout code
      - node/install:
          node-version: '16.17'         
      - checkout
      # Use root level package.json to install dependencies in the frontend app
      - run:
          name: Install Front-End Dependencies
          command: npm run frontend:install
            
            
      # TODO: Install dependencies in the the backend API          
      - run:
          name: Install API Dependencies
          command: npm run api:install
      
      # TODO: Build the backend API      
      - run:
          name: API Build
          command: npm run api:build

      # TODO: Build the frontend app
      - run:
          name: Front-End Build
          command: npm run frontend:build 
      
  # deploy step will run only after manual approval
  deploy:
    docker:
      - image: "cimg/base:stable"
      # more setup needed for aws, node, elastic beanstalk
    steps:
      - node/install:
          node-version: '16.17' 
      - eb/setup
      - aws-cli/setup
      - checkout
       run:
          name: Deploy Backend
          command: |-
                   eb init  udagram  --platform node.js --region us-east-2
                   eb use udagram-env
                   eb setenv PORT=$PORT DB_PORT=$DB_PORT POSTGRES_USERNAME=$POSTGRES_USERNAME POSTGRES_PASSWORD=$POSTGRES_PASSWORD POSTGRES_DB=$POSTGRES_DB POSTGRES_HOST=$POSTGRES_HOST AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION AWS_PROFILE=$AWS_PROFILE AWS_BUCKET=$AWS_BUCKET URL=$URL JWT_SECRET=$JWT_SECRET
                   eb deploy udagram-env
      -run:
        name: Deploy FrontEnd
        command: npm run frontend:deploy
      -

            
workflows:
  udagram:
    jobs:
      - build
      - hold:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - hold
